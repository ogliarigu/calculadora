# Este fluxo de trabalho irá construir um projeto Java com Maven e armazenar em cache/restaurar quaisquer dependências para melhorar o tempo de execução do fluxo de trabalho
# Para obter mais informações, consulte: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

nome: Java CI com Maven

sobre:
  Empurre:
    ramos: [ mestre ]
  pull_request:
    ramos: [ mestre ]

empregos:
  build-dev:
    executado: ubuntu-latest
    meio Ambiente:
      nome: dev
    degraus:
      - usa: actions/checkout@v3
      - nome: Configurar o JDK 11
        usa: actions/setup-java@v3
        com:
          java-versão: '11'
          distribuição: 'temurin'
          cache: maven
      - nome: Construir com Maven
        execute: mvn -B compile --file pom.xml

  build-hmg:
    executado: ubuntu-latest
    meio Ambiente:
      nome: hmg
    degraus:
      - usa: actions/checkout@v3
      - nome: Configurar o JDK 11
        usa: actions/setup-java@v3
        com:
          java-versão: '11'
          distribuição: 'temurin'
          cache: maven
      - nome: Construir com Maven
        execute: mvn -B test --file pom.xml
      - nome: Cache de pacotes SonarCloud
        usa: actions/cache@v1
        com:
          caminho: ~/.sonar/cache
          chave: ${{ runner.os }}-sonar
          chaves de restauração: ${{ runner.os }}-sonar
      - nome: pacotes Cache Maven
        usa: actions/cache@v1
        com:
          caminho: ~/.m2
          chave: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          chaves de restauração: ${{ runner.os }}-m2
      - nome: Construir e analisar
        ambiente:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Necessário para obter informações de PR, se houver
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        execute: mvn -B verifique org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=ogliarigu_Calculadora

  build-prd:
    executado: ubuntu-latest
    meio Ambiente:
      nome: prd
    degraus:
      - usa: actions/checkout@v3
      - nome: Configurar o JDK 11
        usa: actions/setup-java@v3
        com:
          java-versão: '11'
          distribuição: 'temurin'
          cache: maven
      - nome: Construir com Maven
        execute: mvn -B pacote --file pom.xml -DskipTests
      - nome: Baixar artefato
        execute: mkdir staging
      - nome: Copiar artefatos para postar na pasta temporária
        execute: cp target/*jar-with-dependencies.jar staging
      - name: Use o upload de artefato da ação do GitHub
        usa: actions/upload-artifact@v2
        com:
          nome: pacote
          caminho: encenação
